name: Release and Update Homebrew

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - name: Checkout kaleidoscope
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Latest tag: $LATEST_TAG"

      - name: Calculate new version
        id: calc_version
        run: |
          LATEST_TAG="${{ steps.get_tag.outputs.latest_tag }}"
          VERSION=${LATEST_TAG#v}
          
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"
          
          case "${{ github.event.inputs.bump }}" in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch)
              PATCH=$((PATCH + 1))
              ;;
          esac
          
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: v$NEW_VERSION"

      - name: Build for macOS ARM64
        run: |
          GOOS=darwin GOARCH=arm64 go build -o kaleidoscope main.go
          zip kaleidoscope-darwin-arm64.zip kaleidoscope

      - name: Create Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ steps.calc_version.outputs.new_version }}" -m "Release v${{ steps.calc_version.outputs.new_version }}"
          git push origin "v${{ steps.calc_version.outputs.new_version }}"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.calc_version.outputs.new_version }}
          release_name: v${{ steps.calc_version.outputs.new_version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./kaleidoscope-darwin-arm64.zip
          asset_name: kaleidoscope-darwin-arm64.zip
          asset_content_type: application/zip

      - name: Calculate SHA256
        id: calc_sha
        run: |
          SHA256=$(shasum -a 256 kaleidoscope-darwin-arm64.zip | awk '{print $1}')
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT
          echo "SHA256: $SHA256"

      - name: Checkout Homebrew tap
        uses: actions/checkout@v4
        with:
          repository: paradise-runner/homebrew-tap
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          path: homebrew-tap

      - name: Update Homebrew formula
        run: |
          NEW_VERSION="${{ steps.calc_version.outputs.new_version }}"
          SHA256="${{ steps.calc_sha.outputs.sha256 }}"
          
          cat > homebrew-tap/kaleidoscope.rb << EOF
          # typed: false
          # frozen_string_literal: true
          
          # DO NOT EDIT.
          class Kaleidoscope < Formula
            desc "Run multiple AI models in parallel, compare outputs, choose the best solution"
            homepage "https://paradise-runner.github.io/kaleidoscope/"
            version "$NEW_VERSION"
          
            on_macos do
              if Hardware::CPU.arm?
                url "https://github.com/paradise-runner/kaleidoscope/releases/download/v$NEW_VERSION/kaleidoscope-darwin-arm64.zip"
                sha256 "$SHA256"
          
                def install
                  bin.install "kaleidoscope"
                end
              end
            end
          
          end
          EOF

      - name: Commit and push Homebrew formula
        run: |
          cd homebrew-tap
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add kaleidoscope.rb
          git commit -m "Update kaleidoscope to v${{ steps.calc_version.outputs.new_version }}"
          git push
